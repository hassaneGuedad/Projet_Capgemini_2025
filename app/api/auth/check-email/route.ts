import { NextRequest, NextResponse } from 'next/server';
import { authorizedEmailService } from '../../../../services/authorized-emails';

export async function POST(request: NextRequest) {
  console.log('üîç POST /api/auth/check-email - D√©but de la v√©rification');
  
  try {
    const { email } = await request.json();
    console.log('üîç Email √† v√©rifier:', email);

    if (!email) {
      console.log('‚ùå Email manquant');
      return NextResponse.json(
        { error: 'Email requis' },
        { status: 400 }
      );
    }

    // Validation basique de l'email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      console.log('‚ùå Format d\'email invalide:', email);
      return NextResponse.json(
        { error: 'Format d\'email invalide' },
        { status: 400 }
      );
    }

    // V√©rifier si l'email est autoris√©
    console.log('üîç V√©rification de l\'autorisation...');
    const isAuthorized = await authorizedEmailService.isEmailAuthorized(email);
    console.log('üîç R√©sultat de la v√©rification:', isAuthorized);

    return NextResponse.json({
      success: true,
      isAuthorized,
      email: email.toLowerCase().trim()
    });

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la v√©rification de l\'email:', error);
    console.error('‚ùå Stack trace:', error.stack);
    return NextResponse.json(
      { error: 'Erreur lors de la v√©rification de l\'email', details: error.message },
      { status: 500 }
    );
  }
} 